// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace final__test.Migrations
{
    [DbContext(typeof(WeatherDataRepository))]
    partial class WeatherDataRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Deserialize_classes.City", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RootId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("coordmy_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("population")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sunrise")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sunset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("timezone")
                        .HasColumnType("INTEGER");

                    b.HasKey("my_id");

                    b.HasIndex("RootId")
                        .IsUnique();

                    b.HasIndex("coordmy_id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Deserialize_classes.Clouds", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("all")
                        .HasColumnType("INTEGER");

                    b.HasKey("my_id");

                    b.ToTable("Cloud");
                });

            modelBuilder.Entity("Deserialize_classes.Coord", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("lat")
                        .HasColumnType("REAL");

                    b.Property<double>("lon")
                        .HasColumnType("REAL");

                    b.HasKey("my_id");

                    b.ToTable("Coord");
                });

            modelBuilder.Entity("Deserialize_classes.List", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RootId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cloudsmy_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("dt_txt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("mainmy_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("pop")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("sysmy_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("visibility")
                        .HasColumnType("INTEGER");

                    b.Property<int>("windmy_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("my_id");

                    b.HasIndex("RootId");

                    b.HasIndex("cloudsmy_id");

                    b.HasIndex("mainmy_id");

                    b.HasIndex("sysmy_id");

                    b.HasIndex("windmy_id");

                    b.ToTable("List");
                });

            modelBuilder.Entity("Deserialize_classes.Main", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("feels_like")
                        .HasColumnType("REAL");

                    b.Property<int>("grnd_level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("humidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pressure")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sea_level")
                        .HasColumnType("INTEGER");

                    b.Property<double>("temp")
                        .HasColumnType("REAL");

                    b.Property<double>("temp_kf")
                        .HasColumnType("REAL");

                    b.Property<double>("temp_max")
                        .HasColumnType("REAL");

                    b.Property<double>("temp_min")
                        .HasColumnType("REAL");

                    b.HasKey("my_id");

                    b.ToTable("Main");
                });

            modelBuilder.Entity("Deserialize_classes.Root", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("cnt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("cod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("message")
                        .HasColumnType("INTEGER");

                    b.HasKey("my_id");

                    b.ToTable("weatherDatas");
                });

            modelBuilder.Entity("Deserialize_classes.Sys", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("pod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("my_id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("Deserialize_classes.Weather", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Listmy_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("main")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("my_id");

                    b.HasIndex("Listmy_id");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("Deserialize_classes.Wind", b =>
                {
                    b.Property<int>("my_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("deg")
                        .HasColumnType("INTEGER");

                    b.Property<double>("gust")
                        .HasColumnType("REAL");

                    b.Property<double>("speed")
                        .HasColumnType("REAL");

                    b.HasKey("my_id");

                    b.ToTable("Wind");
                });

            modelBuilder.Entity("Deserialize_classes.City", b =>
                {
                    b.HasOne("Deserialize_classes.Root", "Root")
                        .WithOne("city")
                        .HasForeignKey("Deserialize_classes.City", "RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deserialize_classes.Coord", "coord")
                        .WithMany()
                        .HasForeignKey("coordmy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");

                    b.Navigation("coord");
                });

            modelBuilder.Entity("Deserialize_classes.List", b =>
                {
                    b.HasOne("Deserialize_classes.Root", "Root")
                        .WithMany("list")
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deserialize_classes.Clouds", "clouds")
                        .WithMany()
                        .HasForeignKey("cloudsmy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deserialize_classes.Main", "main")
                        .WithMany()
                        .HasForeignKey("mainmy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deserialize_classes.Sys", "sys")
                        .WithMany()
                        .HasForeignKey("sysmy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deserialize_classes.Wind", "wind")
                        .WithMany()
                        .HasForeignKey("windmy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");

                    b.Navigation("clouds");

                    b.Navigation("main");

                    b.Navigation("sys");

                    b.Navigation("wind");
                });

            modelBuilder.Entity("Deserialize_classes.Weather", b =>
                {
                    b.HasOne("Deserialize_classes.List", null)
                        .WithMany("weather")
                        .HasForeignKey("Listmy_id");
                });

            modelBuilder.Entity("Deserialize_classes.List", b =>
                {
                    b.Navigation("weather");
                });

            modelBuilder.Entity("Deserialize_classes.Root", b =>
                {
                    b.Navigation("city")
                        .IsRequired();

                    b.Navigation("list");
                });
#pragma warning restore 612, 618
        }
    }
}
